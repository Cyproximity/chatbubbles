import Head from "next/head";
import {
  Button,
  Container,
  Paper,
  Stack,
  TextField,
  Typography,
} from "@mui/material";
import { Box } from "@mui/system";
import { useState } from "react";
import { format } from "date-fns";

const b =
  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget pretium metus. Quisque vulputate lectus at ligula elementum, nec ullamcorper dui hendrerit. Nam posuere lectus eget est imperdiet laoreet. Ut vulputate interdum metus. Cras sed accumsan libero.";

interface Bubble {
  message: string;
  datetime: string;
  isRight?: boolean;
}

const BubbleItem = (props: Bubble) => {
  return (
    <Box sx={{ marginBottom: "1em" }}>
      <Paper
        elevation={0}
        sx={{
          backgroundColor: props.isRight ? "#2975d0" : "#fff",
          padding: "1em",
          borderRadius: 4,
          border: props.isRight ? "" : "1px solid rgba(0, 0, 0, 0.1)",
        }}
      >
        <Box>
          <Typography
            sx={{ color: props.isRight ? "#fff" : "#000", fontSize: "18px" }}
          >
            {props.message}
          </Typography>
        </Box>
      </Paper>
      <Box>
        <Typography
          align={props.isRight ? "right" : "left"}
          sx={{ color: "#6e7581", marginTop: "4px", padding: "0 1em" }}
        >
          {props.datetime}
        </Typography>
      </Box>
    </Box>
  );
};

const timenow = () => format(Date.now(), "hh:mm bbb, ccc, d LLL");

export default function Home() {
  const [message, setMessage] = useState("");
  const [bubbles, setBubbles] = useState<Bubble[]>([
    { message: b, datetime: timenow(), isRight: true },
    { message: b, datetime: timenow(), isRight: false },
  ]);

  function handleSubmit(e: any) {
    e.preventDefault();
    if (!message) return;
    const datetime = timenow();
    const lastBubble = bubbles[bubbles.length - 1];
    const bubble: Bubble = {
      message,
      datetime: datetime,
      isRight: !lastBubble?.isRight,
    };
    bubbles.push(bubble);
    setMessage("");
  }

  function onMessageChange(e: any) {
    setMessage(e.target.value);
  }

  return (
    <>
      <Head>
        <title>Question & Answers</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Box sx={{ marginBottom: "2em" }}>
          <Typography variant="h5" fontWeight={"800"}>
            Question & Answer
          </Typography>
        </Box>

        <Box>
          {bubbles.map((bubble: Bubble, i) => (
            <Stack
              key={i}
              direction="row"
              justifyContent={!bubble.isRight ? "flex-start" : "flex-end"}
              alignItems="center"
            >
              <BubbleItem {...bubble} />
            </Stack>
          ))}
        </Box>

        <Box sx={{ marginTop: "1em" }}>
          <form noValidate onSubmit={handleSubmit}>
            <Stack direction="row" spacing={3} alignItems="center">
              <TextField
                fullWidth
                onChange={onMessageChange}
                placeholder="Ask a question"
                value={message}
              />
              <Button
                variant="contained"
                type="submit"
                size="large"
                sx={{
                  borderRadius: 4,
                  width: 260,
                  fontSize: 18,
                  fontWeight: 800,
                }}
              >
                Ask question
              </Button>
            </Stack>
          </form>
        </Box>
      </Container>
    </>
  );
}
